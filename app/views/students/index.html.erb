<p id="notice"><%= notice %></p>

<h1>Students</h1>

<div id="app">
            <!-- v-model="name"で、Vue.jsで設定したdateとHTMLのinput要素が同期する -->
            名前：<input v-model="name">
            コース：<input v-model="cource">
            受講期：<input v-model="acceptancePeriod">
            <br>
            <!-- button v-on:click="addStudent"で、buttonがclickされた時に起動するメソッドを選択する -->
            <button v-on:click="addStudent">入力した生徒を追加する</button>

            <ul>
                <!-- v-for="student in students" で、配列studentsを一つ一つ切り出して変数studentに代入している -->
                <!-- v-bind:key="student.id"は、切り出された各要素の一意性を確保するために使う -->
                <li v-for="(student, index) in students" v-bind:key="student.id">
                    <!-- {{ }} のなかに書いた記述で、Vue.jsのデータの式展開が行える -->
                    ID {{index+1}} /
                    名前 {{student.name}} /
                    コース {{student.cource}} /
                    受講期 {{student.acceptancePeriod}}
                </li>
            </ul>
        </div>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Cource</th>
      <th>Acceptanceperiod</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @students.each do |student| %>
      <tr>
        <td><%= student.name %></td>
        <td><%= student.cource %></td>
        <td><%= student.acceptancePeriod %></td>
        <td><%= link_to 'Show', student %></td>
        <td><%= link_to 'Edit', edit_student_path(student) %></td>
        <td><%= link_to 'Destroy', student, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Student', new_student_path %>

<script>
  var app = new Vue({
    // このelにHTMLのidを指定することで、そのidのDOMでVue.jsのインスタンスがインポートされる
    el: '#app',
    // dataは、定義されたVue.jsのインスタンスが持つ属性（値）
    data: {
      name: '',
      cource: '',
      acceptancePeriod: '',
      students: []
    },
    // methodsに、Vue.jsのインスタンスに使用させたいメソッドを記載する
    methods: {
      addStudent: function() {
        var student = {
          name: this.name,
          cource: this.cource,
          acceptancePeriod: this.acceptancePeriod,
        };
        this.students.push(student);
          // この function() { } の中にaddStudentメソッド
          // （入力欄に入力された値と、ID値（最後に登録されたID値+1の値）が新たに出現する機能）の処理を書く
      }
    }
  })
</script>
<style>
html, body {
    margin: 5px;
    padding: 0;
}
</style>
